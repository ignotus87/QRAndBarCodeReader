<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CopyToClipboardText" xml:space="preserve">
    <value>复制到剪贴板</value>
  </data>
  <data name="DeleteText" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="MainPageTitle" xml:space="preserve">
    <value>QR /条形码扫描仪</value>
    <comment>title of the main page</comment>
  </data>
  <data name="OpenLinkText" xml:space="preserve">
    <value>打开链接</value>
  </data>
  <data name="PositionCodeToLine" xml:space="preserve">
    <value>将代码定位到行</value>
    <comment>text shown on the top of the barcode reading page</comment>
  </data>
  <data name="ScanButtonText" xml:space="preserve">
    <value>扫描</value>
  </data>
  <data name="ScannedBarcodeText" xml:space="preserve">
    <value>扫描条形码</value>
    <comment>text shown on the top of the barcode reading page</comment>
  </data>
  <data name="ScanResultText" xml:space="preserve">
    <value>扫描结果</value>
    <comment>title of the scan result details page</comment>
  </data>
  <data name="SearchInGoogleText" xml:space="preserve">
    <value>在Google中搜索</value>
  </data>
  <data name="DeleteAreYouSureText" xml:space="preserve">
    <value>你确定吗？</value>
    <comment>question of the delete item alert box</comment>
  </data>
  <data name="DeleteItemText" xml:space="preserve">
    <value>删除项目</value>
    <comment>title of the delete item alert box</comment>
  </data>
  <data name="DeleteNo" xml:space="preserve">
    <value>没有</value>
    <comment>no answer for the delete item question</comment>
  </data>
  <data name="DeleteYes" xml:space="preserve">
    <value>是</value>
    <comment>yes answer for the delete item question</comment>
  </data>
  <data name="OKText" xml:space="preserve">
    <value>好</value>
    <comment>OK</comment>
  </data>
  <data name="TextCopiedText" xml:space="preserve">
    <value>文字已复制</value>
    <comment>shown after copy to clipboard</comment>
  </data>
  <data name="ScanResultTypeLink" xml:space="preserve">
    <value>链接</value>
    <comment>type of scan result: link</comment>
  </data>
  <data name="ScanResultTypeProduct" xml:space="preserve">
    <value>产品</value>
    <comment>type of scan result: product</comment>
  </data>
  <data name="ScanResultTypeText" xml:space="preserve">
    <value>文本</value>
    <comment>type of scan result: text</comment>
  </data>
  <data name="ShareText" xml:space="preserve">
    <value>分享</value>
    <comment>text for option type share</comment>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>QR /条形码扫描仪</value>
    <comment>app name shown in some content texts eg. sharing title</comment>
  </data>
  <data name="ScannedWithAppNameText" xml:space="preserve">
    <value>使用{0}扫描</value>
    <comment>shown in sharing text</comment>
  </data>
  <data name="ShareViaText" xml:space="preserve">
    <value>分享通过</value>
    <comment>title of the share pane</comment>
  </data>
  <data name="ShareMessageText" xml:space="preserve">
    <value>嘿，看看我刚刚扫描过的{0}！</value>
    <comment>message of share, {0} is the message type</comment>
  </data>
</root>